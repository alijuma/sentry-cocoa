name: Test Build Signed XCFramework
run-name: Test Build Signed XCFramework

# THIS IS NOT A PRODUCTION WORKFLOW, AND SHOULD NOT BE MERGED TO MAIN!
on:
  pull_request:

jobs:
  prepare_framework:
    runs-on: macos-14
    name: "Create XCFramework"
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: "Download Fastlane Certificate"
        run: bundle exec fastlane prepare_sign_xcframework
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
        shell: sh

      - name: "Generate XCFramework"
        run: |
          ./scripts/ci-select-xcode.sh 15.2
          # make bump-version TO=${{ github.event.inputs.version }}
          # We need to build the framework during release to get it's SHA value
          # the framework will be saved as an artefact and we will use the same
          # binary for the entire release process to avoid the SHA to change
          make build-signed-xcframework

      - uses: actions/upload-artifact@v4
        with:
          name: xcframeworks.zip
          path: |
            Carthage/Sentry.xcframework.zip
            Carthage/Sentry-Dynamic.xcframework.zip
            Carthage/SentrySwiftUI.xcframework.zip
            Carthage/Sentry-WithoutUIKitOrAppKit.zip
          overwrite: true